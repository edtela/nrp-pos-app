/**
 * Menu Item Component Styles
 * Individual menu item with selection states
 */

.menu-item {
    display: flex;
    align-items: center;
    padding: var(--md-sys-spacing-md);
    background: transparent;
    border-bottom: 1px solid var(--md-sys-color-outline-variant);
    width: 100%;
    transition: background-color 200ms cubic-bezier(0.4, 0, 0.2, 1);
    cursor: pointer;
    min-height: 80px;
    position: relative;
    text-align: left;
    -webkit-tap-highlight-color: transparent;
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    user-select: none;
    outline: none;
}

.menu-item:focus {
    outline: none;
}

.menu-item:last-child {
    border-bottom: none;
}

.menu-item:hover {
    background: rgba(29, 27, 32, 0.08);
}

/* Enhanced dark mode separation */
[data-theme="dark"] .menu-item {
    background: transparent;
}

[data-theme="dark"] .menu-item:hover {
    background: rgba(226, 227, 220, 0.08);
}

/* Control element styling */
.menu-item-control {
    width: 24px;
    height: 24px;
    flex-shrink: 0;
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
}

/* Checkmark for selected check items */
.menu-item[data-control-type="check"][data-selected="true"] .menu-item-control::after {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    width: 24px;
    height: 24px;
    background-color: var(--md-sys-color-primary);
    -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"/></svg>');
    mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"/></svg>');
    -webkit-mask-size: 24px 24px;
    mask-size: 24px 24px;
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-position: center;
    mask-position: center;
}

/* Red minus for included but not selected check items */
.menu-item[data-control-type="check"][data-included="true"]:not([data-selected="true"]) .menu-item-control::after {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    width: 24px;
    height: 24px;
    background-color: var(--md-sys-color-error);
    -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 13H5v-2h14v2z"/></svg>');
    mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M19 13H5v-2h14v2z"/></svg>');
    -webkit-mask-size: 24px 24px;
    mask-size: 24px 24px;
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
    -webkit-mask-position: center;
    mask-position: center;
}

/* Radio button circle */
.menu-item[data-control-type="radio"] .menu-item-control::before {
    content: "";
    position: absolute;
    left: 2px;
    top: 2px;
    width: 20px;
    height: 20px;
    border: 2px solid var(--md-sys-color-outline);
    border-radius: 50%;
    background: var(--md-sys-color-surface);
    box-sizing: border-box;
}

/* Red circle for required but not selected radio */
.menu-item[data-control-type="radio"][data-included="true"]:not([data-selected="true"]) .menu-item-control::before {
    border-color: var(--md-sys-color-error);
}

/* Selected state for radio buttons */
.menu-item[data-control-type="radio"][data-selected="true"] .menu-item-control::before {
    border-color: var(--md-sys-color-primary);
}

.menu-item[data-control-type="radio"][data-selected="true"] .menu-item-control::after {
    content: "";
    position: absolute;
    left: 8px;
    top: 8px;
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: var(--md-sys-color-primary);
}

/* Control/Icon Visibility Rules */

/* Radio: Never show icon */
.menu-item[data-control-type="radio"] .menu-item-icon {
    display: none;
}

/* Checkbox: Show control when selected OR included */
.menu-item[data-control-type="check"][data-selected="true"] .menu-item-control,
.menu-item[data-control-type="check"][data-included="true"] .menu-item-control {
    display: flex;
}

/* Checkbox: Hide control by default (when not selected and not included) */
.menu-item[data-control-type="check"]:not([data-selected="true"]):not([data-included="true"]) .menu-item-control {
    display: none;
}

/* Checkbox: Hide icon when control is shown (selected or included) */
.menu-item[data-control-type="check"][data-selected="true"] .menu-item-icon,
.menu-item[data-control-type="check"][data-included="true"] .menu-item-icon {
    display: none;
}

/* Nav: Hide control, always show icon */
.menu-item[data-control-type="nav"] .menu-item-control {
    display: none;
}

.menu-item-icon {
    font-size: 24px;
    line-height: 1;
    flex-shrink: 0;
    width: 24px;
    height: 24px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.menu-item-content {
    display: flex;
    align-items: center;
    gap: var(--md-sys-spacing-md);
    width: 100%;
}

.menu-item-text {
    flex: 1;
    min-width: 0;
    padding-right: 80px; /* Space for price */
}

.menu-item-name {
    font-size: var(--md-sys-typescale-body-large-size);
    line-height: var(--md-sys-typescale-body-large-line-height);
    font-weight: 500;
    margin: 0 0 4px 0;
    color: var(--md-sys-color-on-surface);
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.menu-item-description {
    font-size: var(--md-sys-typescale-body-medium-size);
    line-height: var(--md-sys-typescale-body-medium-line-height);
    color: var(--md-sys-color-on-surface-variant);
    margin: 0;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.menu-item-price {
    font-size: var(--md-sys-typescale-title-medium-size);
    font-weight: var(--md-sys-typescale-title-medium-weight);
    color: var(--md-sys-color-primary);
    white-space: nowrap;
    position: absolute;
    right: var(--md-sys-spacing-md);
    top: 50%;
    transform: translateY(-50%);
}

/* Chevron icon for categories - now handled by SVG in menu-item.ts */
.menu-item-price svg {
    color: var(--md-sys-color-on-surface-variant);
    vertical-align: middle;
}

/* Required item styles */
/* When a required item is selected, show it's locked/required */
.menu-item[data-required="true"][data-selected="true"] {
    cursor: default;
}

/* Reduce hover effect for selected required items */
.menu-item[data-required="true"][data-selected="true"]:hover {
    background: var(--md-sys-color-surface-container-low);
}

/* Make the checkmark slightly different to indicate it's locked */
.menu-item[data-required="true"][data-selected="true"] .menu-item-control::after {
    opacity: 0.85; /* Slightly faded to show it's locked */
}

/* Add a subtle animation when trying to click a locked item */
@keyframes shake-locked {
    0%, 100% { transform: translateX(0); }
    25% { transform: translateX(-2px); }
    75% { transform: translateX(2px); }
}

.menu-item[data-required="true"][data-selected="true"]:active .menu-item-control {
    animation: shake-locked 0.2s ease-in-out;
}
